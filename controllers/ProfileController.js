const User = require("../models/User")const dotenv = require("dotenv")dotenv.config()exports.getAllUsers = async (req, res) => {    try {        const users = await User.find({}).populate({            path: 'posts',            populate: [                {path: 'likes', select: 'user'},                {                    path: 'comments',                    select: 'user content',                    populate: {                        path: 'user',                        select: 'firstName lastName'                    }                }            ]        });        const formattedUsers = {            id: users._id,            fullName: `${users.firstName} ${users.lastName}`,            email: users.email,            phone: users.phone,            dateOfBirth: users.dateOfBirth.toLocaleDateString(),            houseAddress: users.houseAddress,            user_role: users.user_role,            posts: users.posts.map(post => ({                id: post._id,                content: post.content,                image: post.image,                video: post.video,                likesCount: post.likes.length,                commentsCount: post.comments.length,                comments: post.comments.map(comment => ({                    id: comment._id,                    content: comment.content,                    user: comment.user ? `${comment.user.firstName} ${comment.user.lastName}` : 'Unknown User'                }))            }))        }        formattedUsers.sort((a, b) => {            if (a.user_role === 'admin' && b.user_role !== 'admin') {                return -1;            }            if (a.user_role !== 'admin' && b.user_role === 'admin') {                return 1;            }            return 0;        });        return res.status(200).json({users: formattedUsers})    } catch (err) {        console.error(err)        return res.status(500).json({error: "Failed to retrieve users"})    }}exports.getPersonalProfile = async (req, res) => {    try {        const userId = req.session.userId;        if (!userId) {            return res.status(400).json({error: "User ID is required"});        }        const user = await User.findById(userId).populate({            path: 'posts',            populate: [                {path: 'likes', select: 'user'},                {                    path: 'comments',                    select: 'user content',                    populate: {                        path: 'user',                        select: 'firstName lastName'                    }                }            ]        });        if (!user) {            return res.status(400).json({error: "User does not exist"});        }        const formattedUser = {            id: user._id,            fullName: `${user.firstName} ${user.lastName}`,            email: user.email,            phone: user.phone,            dateOfBirth: user.dateOfBirth.toLocaleDateString(),            houseAddress: user.houseAddress,            user_role: user.user_role,            posts: user.posts.map(post => ({                id: post._id,                content: post.content,                image: post.image,                video: post.video,                likesCount: post.likes.length,                commentsCount: post.comments.length,                comments: post.comments.map(comment => ({                    id: comment._id,                    content: comment.content,                    user: comment.user ? `${comment.user.firstName} ${comment.user.lastName}` : 'Unknown User'                }))            }))        }        return res.status(200).json({user: formattedUser})    } catch (err) {        console.error(err)        return res.status(500).json({error: "Failed to retrieve user profile"})    }}