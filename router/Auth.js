const express = require("express")const User = require("../models/User");const bcrypt = require("bcryptjs");const jwt = require("jsonwebtoken");const auth = express.Router()auth.post('/register', async (req, res) => {    try {        const {email, password} = req.body;        const checkExistingUser = await User.findOne({email});        if (checkExistingUser) {            return res.status(400).json({message: "User already exists"});        }        const hashedPassword = await bcrypt.hash(password, 10);        const user = new User({email, password: hashedPassword});        await user.save();    } catch (error) {        console.error(error);        return res.status(400).json({error: "Failed to register user"});    }});auth.post('/login', async (req, res) => {    try {        const {email, password} = req.body;        const user = await User.findOne({email});        if (!user) {            return res.status(400).json({error: "User not found"});        }        const passwordMatch = await bcrypt.compare(password, user.password);        if (!passwordMatch) {            return res.status(400).json({error: "Invalid Password"})        }        const token = jwt.sign({userId: user._id}, process.env.SECRET_KEY, {            expiresIn: "1h"        });        return res.status(200).json({message: "Login Success", token});    } catch (error) {        console.error(error)        return res.status(400).json({error: "Failed to login user"})    }});module.exports = auth;